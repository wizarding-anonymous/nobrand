name: Deploy to Production

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_YANDEX_METRIKA_ID: ${{ secrets.YANDEX_METRIKA_ID }}
          NEXT_PUBLIC_LAUNCH_DATE: ${{ secrets.LAUNCH_DATE }}

      - name: Deploy to Vercel
        if: ${{ vars.DEPLOY_TARGET == 'vercel' }}
        run: |
          npm i -g vercel
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to VPS
        if: ${{ vars.DEPLOY_TARGET == 'vps' }}
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd /var/www/premium-tech
            git pull origin main
            npm ci
            npm run build
            npm run db:migrate
            pm2 restart premium-tech

      - name: Run smoke tests
        run: |
          npm run test:smoke
        env:
          PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}

      - name: Notify Telegram
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üöÄ Production Deployment: ${{ job.status }}
            
            Repository: ${{ github.repository }}
            Tag: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Actor: ${{ github.actor }}
            
            ${{ job.status == 'success' && '‚úÖ Deployment successful!' || '‚ùå Deployment failed!' }}
